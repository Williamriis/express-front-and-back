{
  "{\"sourceRoot\":\"/Users/williamjensen/Desktop/NewTest/api/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/williamjensen/Desktop/NewTest/api\",\"filename\":\"/Users/williamjensen/Desktop/NewTest/api/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/williamjensen/Desktop/NewTest/api\",\"plugins\":[],\"presets\":[]}:7.9.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/williamjensen/Desktop/NewTest/api/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/williamjensen/Desktop/NewTest/api",
      "filename": "/Users/williamjensen/Desktop/NewTest/api/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/williamjensen/Desktop/NewTest/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/williamjensen/Desktop/NewTest/api/server.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/williamjensen/Desktop/NewTest/api/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/williamjensen/Desktop/NewTest/api/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "import express from 'express';\nconst app = express();\napp.listen(3000, () => console.log('App listening on port 3000'));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwiYXBwIiwibGlzdGVuIiwiY29uc29sZSIsImxvZyJdLCJtYXBwaW5ncyI6IkFBQUEsT0FBT0EsT0FBUCxNQUFvQixTQUFwQjtBQUVBLE1BQU1DLEdBQUcsR0FBR0QsT0FBTyxFQUFuQjtBQUVBQyxHQUFHLENBQUNDLE1BQUosQ0FBVyxJQUFYLEVBQWlCLE1BQU1DLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLDRCQUFaLENBQXZCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy93aWxsaWFtamVuc2VuL0Rlc2t0b3AvTmV3VGVzdC9hcGkvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcydcblxuY29uc3QgYXBwID0gZXhwcmVzcygpXG5cbmFwcC5saXN0ZW4oMzAwMCwgKCkgPT4gY29uc29sZS5sb2coJ0FwcCBsaXN0ZW5pbmcgb24gcG9ydCAzMDAwJykpIl19",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "express",
        "app",
        "listen",
        "console",
        "log"
      ],
      "mappings": "AAAA,OAAOA,OAAP,MAAoB,SAApB;AAEA,MAAMC,GAAG,GAAGD,OAAO,EAAnB;AAEAC,GAAG,CAACC,MAAJ,CAAW,IAAX,EAAiB,MAAMC,OAAO,CAACC,GAAR,CAAY,4BAAZ,CAAvB",
      "sourceRoot": "/Users/williamjensen/Desktop/NewTest/api/",
      "sourcesContent": [
        "import express from 'express'\n\nconst app = express()\n\napp.listen(3000, () => console.log('App listening on port 3000'))"
      ]
    },
    "sourceType": "module",
    "mtime": 1588346858000
  },
  "{\"sourceRoot\":\"/Users/williamjensen/Desktop/NewTest/api/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/williamjensen/Desktop/NewTest/api\",\"filename\":\"/Users/williamjensen/Desktop/NewTest/api/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/williamjensen/Desktop/NewTest/api\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/williamjensen/Desktop/NewTest/api/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/williamjensen/Desktop/NewTest/api",
      "filename": "/Users/williamjensen/Desktop/NewTest/api/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/williamjensen/Desktop/NewTest/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/williamjensen/Desktop/NewTest/api/server.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/williamjensen/Desktop/NewTest/api/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/williamjensen/Desktop/NewTest/api/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _books = _interopRequireDefault(require(\"./data/books.json\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])(); // app.use((req, res, next) => {\n//     res.header('Access-Control-Allow-Origin', '*');\n//     next();\n// });\n\napp.use((0, _cors[\"default\"])());\napp.use(_bodyParser[\"default\"].json());\napp.get('/', function (req, res) {\n  return res.send('ello ello');\n});\napp.get('/books', function (req, res) {\n  var orderedBooks = _books[\"default\"];\n  var order = req.query.order;\n  var page = +req.query.page || 1;\n  var selectedPage = orderedBooks.slice(page * 20 - 20, page * 20);\n\n  if (order === 'highest') {\n    orderedBooks = orderedBooks.sort(function (a, b) {\n      return a.average_rating > b.average_rating ? -1 : 1;\n    });\n    selectedPage = orderedBooks.slice(page * 20 - 20, page * 20);\n    res.json(selectedPage);\n  } else if (order === 'lowest') {\n    orderedBooks = orderedBooks.sort(function (a, b) {\n      return a.average_rating > b.average_rating ? 1 : -1;\n    });\n    selectedPage = orderedBooks.slice(page * 20 - 20, page * 20);\n    res.json(selectedPage);\n  } else if (order === 'longest') {\n    orderedBooks = orderedBooks.sort(function (a, b) {\n      return a.num_pages > b.num_pages ? -1 : 1;\n    });\n    selectedPage = orderedBooks.slice(page * 20 - 20, page * 20);\n    res.json(selectedPage);\n  } else if (order === 'shortest') {\n    orderedBooks = orderedBooks.sort(function (a, b) {\n      return a.num_pages > b.num_pages ? 1 : -1;\n    });\n    selectedPage = orderedBooks.slice(page * 20 - 20, page * 20);\n    res.json(selectedPage);\n  } else {\n    orderedBooks = orderedBooks.sort(function (a, b) {\n      return a.bookID > b.bookID ? 1 : -1;\n    });\n    selectedPage = orderedBooks.slice(page * 20 - 20, page * 20);\n    res.json(selectedPage);\n  }\n});\napp.get('/authors/:author', function (req, res) {\n  var author = req.params.author.toLowerCase();\n\n  var selectedAuthor = _books[\"default\"].filter(function (book) {\n    return book.authors.toLowerCase().replace(' ', '_').includes(author);\n  });\n\n  res.json(selectedAuthor);\n});\napp.put('/books/:id', function (req, res) {\n  var id = req.params.id;\n\n  var foundBook = _books[\"default\"].find(function (book) {\n    return book.bookID === +id;\n  });\n\n  foundBook.image_url = req.body.image_url;\n  res.send(foundBook);\n});\napp.listen(4000, function () {\n  return console.log('App listening on port 4000');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJhcHAiLCJ1c2UiLCJib2R5UGFyc2VyIiwianNvbiIsImdldCIsInJlcSIsInJlcyIsInNlbmQiLCJvcmRlcmVkQm9va3MiLCJib29rcyIsIm9yZGVyIiwicXVlcnkiLCJwYWdlIiwic2VsZWN0ZWRQYWdlIiwic2xpY2UiLCJzb3J0IiwiYSIsImIiLCJhdmVyYWdlX3JhdGluZyIsIm51bV9wYWdlcyIsImJvb2tJRCIsImF1dGhvciIsInBhcmFtcyIsInRvTG93ZXJDYXNlIiwic2VsZWN0ZWRBdXRob3IiLCJmaWx0ZXIiLCJib29rIiwiYXV0aG9ycyIsInJlcGxhY2UiLCJpbmNsdWRlcyIsInB1dCIsImlkIiwiZm91bmRCb29rIiwiZmluZCIsImltYWdlX3VybCIsImJvZHkiLCJsaXN0ZW4iLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBRUEsSUFBTUEsR0FBRyxHQUFHLDBCQUFaLEMsQ0FFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsdUJBQVI7QUFDQUQsR0FBRyxDQUFDQyxHQUFKLENBQVFDLHVCQUFXQyxJQUFYLEVBQVI7QUFFQUgsR0FBRyxDQUFDSSxHQUFKLENBQVEsR0FBUixFQUFhLFVBQUNDLEdBQUQsRUFBTUMsR0FBTjtBQUFBLFNBQWNBLEdBQUcsQ0FBQ0MsSUFBSixDQUFTLFdBQVQsQ0FBZDtBQUFBLENBQWI7QUFFQVAsR0FBRyxDQUFDSSxHQUFKLENBQVEsUUFBUixFQUFrQixVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUM1QixNQUFJRSxZQUFZLEdBQUdDLGlCQUFuQjtBQUNBLE1BQU1DLEtBQUssR0FBR0wsR0FBRyxDQUFDTSxLQUFKLENBQVVELEtBQXhCO0FBQ0EsTUFBTUUsSUFBSSxHQUFHLENBQUNQLEdBQUcsQ0FBQ00sS0FBSixDQUFVQyxJQUFYLElBQW1CLENBQWhDO0FBQ0EsTUFBSUMsWUFB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QUNJLEdBQUosQ0FBUSxrQkFBUixFQUE0QixVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUN0QyxNQUFNZSxNQUFNLEdBQUdoQixHQUFHLENBQUNpQixNQUFKLENBQVdELE1BQVgsQ0FBa0JFLFdBQWxCLEVBQWY7O0FBQ0EsTUFBTUMsY0FBYyxHQUFHZixrQkFBTWdCLE1BQU4sQ0FBYSxVQUFDQyxJQUFEO0FBQUEsV0FBVUEsSUFBSSxDQUFDQyxPQUFMLENBQWFKLFdBQWIsR0FBMkJLLE9BQTNCLENBQW1DLEdBQW5DLEVBQXdDLEdBQXhDLEVBQTZDQyxRQUE3QyxDQUFzRFIsTUFBdEQsQ0FBVjtBQUFBLEdBQWIsQ0FBdkI7O0FBQ0FmLEVBQUFBLEdBQUcsQ0FBQ0gsSUFBSixDQUFTcUIsY0FBVDtBQUNILENBSkQ7QUFNQXhCLEdBQUcsQ0FBQzhCLEdBQUosQ0FBUSxZQUFSLEVBQXNCLFVBQUN6QixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNoQyxNQUFNeUIsRUFBRSxHQUFHMUIsR0FBRyxDQUFDaUIsTUFBSixDQUFXUyxFQUF0Qjs7QUFDQSxNQUFNQyxTQUFTLEdBQUd2QixrQkFBTXdCLElBQU4sQ0FBVyxVQUFDUCxJQUFEO0FBQUEsV0FBVUEsSUFBSSxDQUFDTixNQUFMLEtBQWdCLENBQUNXLEVBQTNCO0FBQUEsR0FBWCxDQUFsQjs7QUFDQUMsRUFBQUEsU0FBUyxDQUFDRSxTQUFWLEdBQXNCN0IsR0FBRyxDQUFDOEIsSUFBSixDQUFTRCxTQUEvQjtBQUNBNUIsRUFBQUEsR0FBRyxDQUFDQyxJQUFKLENBQVN5QixTQUFUO0FBQ0gsQ0FMRDtBQU9BaEMsR0FBRyxDQUFDb0MsTUFBSixDQUFXLElBQVgsRUFBaUI7QUFBQSxTQUFNQyxPQUFPLENBQUNDLEdBQVIsQ0FBWSw0QkFBWixDQUFOO0FBQUEsQ0FBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL3dpbGxpYW1qZW5zZW4vRGVza3RvcC9OZXdUZXN0L2FwaS8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJ1xuaW1wb3J0IGNvcnMgZnJvbSAnY29ycydcbmltcG9ydCBib2R5UGFyc2VyIGZyb20gJ2JvZHktcGFyc2VyJ1xuaW1wb3J0IGJvb2tzIGZyb20gJy4vZGF0YS9ib29rcy5qc29uJ1xuXG5jb25zdCBhcHAgPSBleHByZXNzKClcblxuLy8gYXBwLnVzZSgocmVxLCByZXMsIG5leHQpID0+IHtcbi8vICAgICByZXMuaGVhZGVyKCdBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW4nLCAnKicpO1xuLy8gICAgIG5leHQoKTtcbi8vIH0pO1xuXG5hcHAudXNlKGNvcnMoKSlcbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpXG5cbmFwcC5nZXQoJy8nLCAocmVxLCByZXMpID0+IHJlcy5zZW5kKCdlbGxvIGVsbG8nKSlcblxuYXBwLmdldCgnL2Jvb2tzJywgKHJlcSwgcmVzKSA9PiB7XG4gICAgbGV0IG9yZGVyZWRCb29rcyA9IGJvb2tzXG4gICAgY29uc3Qgb3JkZXIgPSByZXEucXVlcnkub3JkZXJcbiAgICBjb25zdCBwYWdlID0gK3JlcS5xdWVyeS5wYWdlIHx8IDFcbiAgICBsZXQgc2VsZWN0ZWRQYWdlID0gb3JkZXJlZEJvb2tzLnNsaWNlKChwYWdlICogMjApIC0gMjAsIHBhZ2UgKiAyMClcblxuICAgIGlmIChvcmRlciA9PT0gJ2hpZ2hlc3QnKSB7XG4gICAgICAgIG9yZGVyZWRCb29rcyA9IG9yZGVyZWRCb29rcy5zb3J0KChhLCBiKSA9PiAoYS5hdmVyYWdlX3JhdGluZyA+IGIuYXZlcmFnZV9yYXRpbmcpID8gLTEgOiAxKVxuICAgICAgICBzZWxlY3RlZFBhZ2UgPSBvcmRlcmVkQm9va3Muc2xpY2UoKHBhZ2UgKiAyMCkgLSAyMCwgcGFnZSAqIDIwKVxuICAgICAgICByZXMuanNvbihzZWxlY3RlZFBhZ2UpXG4gICAgfSBlbHNlIGlmIChvcmRlciA9PT0gJ2xvd2VzdCcpIHtcbiAgICAgICAgb3JkZXJlZEJvb2tzID0gb3JkZXJlZEJvb2tzLnNvcnQoKGEsIGIpID0+IChhLmF2ZXJhZ2VfcmF0aW5nID4gYi5hdmVyYWdlX3JhdGluZykgPyAxIDogLTEpXG4gICAgICAgIHNlbGVjdGVkUGFnZSA9IG9yZGVyZWRCb29rcy5zbGljZSgocGFnZSAqIDIwKSAtIDIwLCBwYWdlICogMjApXG4gICAgICAgIHJlcy5qc29uKHNlbGVjdGVkUGFnZSlcbiAgICB9IGVsc2UgaWYgKG9yZGVyID09PSAnbG9uZ2VzdCcpIHtcbiAgICAgICAgb3JkZXJlZEJvb2tzID0gb3JkZXJlZEJvb2tzLnNvcnQoKGEsIGIpID0+IChhLm51bV9wYWdlcyA+IGIubnVtX3BhZ2VzKSA/IC0xIDogMSlcbiAgICAgICAgc2VsZWN0ZWRQYWdlID0gb3JkZXJlZEJvb2tzLnNsaWNlKChwYWdlICogMjApIC0gMjAsIHBhZ2UgKiAyMClcbiAgICAgICAgcmVzLmpzb24oc2VsZWN0ZWRQYWdlKVxuICAgIH0gZWxzZSBpZiAob3JkZXIgPT09ICdzaG9ydGVzdCcpIHtcbiAgICAgICAgb3JkZXJlZEJvb2tzID0gb3JkZXJlZEJvb2tzLnNvcnQoKGEsIGIpID0+IChhLm51bV9wYWdlcyA+IGIubnVtX3BhZ2VzKSA/IDEgOiAtMSlcbiAgICAgICAgc2VsZWN0ZWRQYWdlID0gb3JkZXJlZEJvb2tzLnNsaWNlKChwYWdlICogMjApIC0gMjAsIHBhZ2UgKiAyMClcbiAgICAgICAgcmVzLmpzb24oc2VsZWN0ZWRQYWdlKVxuICAgIH0gZWxzZSB7XG4gICAgICAgIG9yZGVyZWRCb29rcyA9IG9yZGVyZWRCb29rcy5zb3J0KChhLCBiKSA9PiAoYS5ib29rSUQgPiBiLmJvb2tJRCkgPyAxIDogLTEpXG4gICAgICAgIHNlbGVjdGVkUGFnZSA9IG9yZGVyZWRCb29rcy5zbGljZSgocGFnZSAqIDIwKSAtIDIwLCBwYWdlICogMjApXG4gICAgICAgIHJlcy5qc29uKHNlbGVjdGVkUGFnZSlcbiAgICB9XG5cbn0pXG5hcHAuZ2V0KCcvYXV0aG9ycy86YXV0aG9yJywgKHJlcSwgcmVzKSA9PiB7XG4gICAgY29uc3QgYXV0aG9yID0gcmVxLnBhcmFtcy5hdXRob3IudG9Mb3dlckNhc2UoKVxuICAgIGNvbnN0IHNlbGVjdGVkQXV0aG9yID0gYm9va3MuZmlsdGVyKChib29rKSA9PiBib29rLmF1dGhvcnMudG9Mb3dlckNhc2UoKS5yZXBsYWNlKCcgJywgJ18nKS5pbmNsdWRlcyhhdXRob3IpKVxuICAgIHJlcy5qc29uKHNlbGVjdGVkQXV0aG9yKVxufSlcblxuYXBwLnB1dCgnL2Jvb2tzLzppZCcsIChyZXEsIHJlcykgPT4ge1xuICAgIGNvbnN0IGlkID0gcmVxLnBhcmFtcy5pZFxuICAgIGNvbnN0IGZvdW5kQm9vayA9IGJvb2tzLmZpbmQoKGJvb2spID0+IGJvb2suYm9va0lEID09PSAraWQpXG4gICAgZm91bmRCb29rLmltYWdlX3VybCA9IHJlcS5ib2R5LmltYWdlX3VybFxuICAgIHJlcy5zZW5kKGZvdW5kQm9vaylcbn0pXG5cbmFwcC5saXN0ZW4oNDAwMCwgKCkgPT4gY29uc29sZS5sb2coJ0FwcCBsaXN0ZW5pbmcgb24gcG9ydCA0MDAwJykpIl19",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "use",
        "bodyParser",
        "json",
        "get",
        "req",
        "res",
        "send",
        "orderedBooks",
        "books",
        "order",
        "query",
        "page",
        "selectedPage",
        "slice",
        "sort",
        "a",
        "b",
        "average_rating",
        "num_pages",
        "bookID",
        "author",
        "params",
        "toLowerCase",
        "selectedAuthor",
        "filter",
        "book",
        "authors",
        "replace",
        "includes",
        "put",
        "id",
        "foundBook",
        "find",
        "image_url",
        "body",
        "listen",
        "console",
        "log"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/williamjensen/Desktop/NewTest/api/",
      "sourcesContent": [
        "import express from 'express'\nimport cors from 'cors'\nimport bodyParser from 'body-parser'\nimport books from './data/books.json'\n\nconst app = express()\n\n// app.use((req, res, next) => {\n//     res.header('Access-Control-Allow-Origin', '*');\n//     next();\n// });\n\napp.use(cors())\napp.use(bodyParser.json())\n\napp.get('/', (req, res) => res.send('ello ello'))\n\napp.get('/books', (req, res) => {\n    let orderedBooks = books\n    const order = req.query.order\n    const page = +req.query.page || 1\n    let selectedPage = orderedBooks.slice((page * 20) - 20, page * 20)\n\n    if (order === 'highest') {\n        orderedBooks = orderedBooks.sort((a, b) => (a.average_rating > b.average_rating) ? -1 : 1)\n        selectedPage = orderedBooks.slice((page * 20) - 20, page * 20)\n        res.json(selectedPage)\n    } else if (order === 'lowest') {\n        orderedBooks = orderedBooks.sort((a, b) => (a.average_rating > b.average_rating) ? 1 : -1)\n        selectedPage = orderedBooks.slice((page * 20) - 20, page * 20)\n        res.json(selectedPage)\n    } else if (order === 'longest') {\n        orderedBooks = orderedBooks.sort((a, b) => (a.num_pages > b.num_pages) ? -1 : 1)\n        selectedPage = orderedBooks.slice((page * 20) - 20, page * 20)\n        res.json(selectedPage)\n    } else if (order === 'shortest') {\n        orderedBooks = orderedBooks.sort((a, b) => (a.num_pages > b.num_pages) ? 1 : -1)\n        selectedPage = orderedBooks.slice((page * 20) - 20, page * 20)\n        res.json(selectedPage)\n    } else {\n        orderedBooks = orderedBooks.sort((a, b) => (a.bookID > b.bookID) ? 1 : -1)\n        selectedPage = orderedBooks.slice((page * 20) - 20, page * 20)\n        res.json(selectedPage)\n    }\n\n})\napp.get('/authors/:author', (req, res) => {\n    const author = req.params.author.toLowerCase()\n    const selectedAuthor = books.filter((book) => book.authors.toLowerCase().replace(' ', '_').includes(author))\n    res.json(selectedAuthor)\n})\n\napp.put('/books/:id', (req, res) => {\n    const id = req.params.id\n    const foundBook = books.find((book) => book.bookID === +id)\n    foundBook.image_url = req.body.image_url\n    res.send(foundBook)\n})\n\napp.listen(4000, () => console.log('App listening on port 4000'))"
      ]
    },
    "sourceType": "script",
    "mtime": 1588576063000
  }
}